Determining if the CL_VERSION_2_2 exist failed with the following output:
Change Dir: /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/xcodebuild" "-project" "CMAKE_TRY_COMPILE.xcodeproj" "build" "-target" "cmTC_50299" "-configuration" "Debug"
2018-01-29 17:42:58.300 xcodebuild[99364:1327476] [MT] PluginLoading: Required plug-in compatibility UUID B395D63E-9166-4CD6-9287-6889D507AD6A for plug-in at path '~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/VVDocumenter-Xcode.xcplugin' not present in DVTPlugInCompatibilityUUIDs
=== BUILD TARGET cmTC_50299 OF PROJECT CMAKE_TRY_COMPILE WITH CONFIGURATION Debug ===

Check dependencies

Write auxiliary files
/bin/mkdir -p /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64
write-file /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64/cmTC_50299.LinkFileList

CompileC CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64/CheckSymbolExists.o CheckSymbolExists.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
    cd /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp
    export LANG=en_US.US-ASCII
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x c -arch x86_64 -fmessage-length=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -Wno-trigraphs -fpascal-strings -O0 -Wno-missing-field-initializers -Wno-missing-prototypes -Wno-return-type -Wno-missing-braces -Wparentheses -Wswitch -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wno-unused-variable -Wunused-value -Wno-empty-body -Wno-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wno-constant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wno-shorten-64-to-32 -Wpointer-sign -Wno-newline-eof -DCMAKE_INTDIR=\"Debug\" -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -fasm-blocks -fstrict-aliasing -Wdeprecated-declarations -mmacosx-version-min=10.13 -g -Wno-sign-conversion -Wno-infinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/Debug/include -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/DerivedSources/x86_64 -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/DerivedSources -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -F/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/Debug -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks -MMD -MT dependencies -MF /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64/CheckSymbolExists.d --serialize-diagnostics /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64/CheckSymbolExists.dia -c /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c -o /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64/CheckSymbolExists.o
/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CL_VERSION_2_2'
  return ((int*)(&CL_VERSION_2_2))[argc];
                  ^
1 error generated.

** BUILD FAILED **


The following build commands failed:
	CompileC CMAKE_TRY_COMPILE.build/Debug/cmTC_50299.build/Objects-normal/x86_64/CheckSymbolExists.o CheckSymbolExists.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
(1 failure)

File /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_2_2
  return ((int*)(&CL_VERSION_2_2))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the CL_VERSION_2_1 exist failed with the following output:
Change Dir: /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/xcodebuild" "-project" "CMAKE_TRY_COMPILE.xcodeproj" "build" "-target" "cmTC_9a0a0" "-configuration" "Debug"
2018-01-29 17:42:59.577 xcodebuild[99378:1327542] [MT] PluginLoading: Required plug-in compatibility UUID B395D63E-9166-4CD6-9287-6889D507AD6A for plug-in at path '~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/VVDocumenter-Xcode.xcplugin' not present in DVTPlugInCompatibilityUUIDs
=== BUILD TARGET cmTC_9a0a0 OF PROJECT CMAKE_TRY_COMPILE WITH CONFIGURATION Debug ===

Check dependencies

Write auxiliary files
/bin/mkdir -p /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64
write-file /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64/cmTC_9a0a0.LinkFileList

CompileC CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64/CheckSymbolExists.o CheckSymbolExists.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
    cd /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp
    export LANG=en_US.US-ASCII
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x c -arch x86_64 -fmessage-length=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -Wno-trigraphs -fpascal-strings -O0 -Wno-missing-field-initializers -Wno-missing-prototypes -Wno-return-type -Wno-missing-braces -Wparentheses -Wswitch -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wno-unused-variable -Wunused-value -Wno-empty-body -Wno-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wno-constant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wno-shorten-64-to-32 -Wpointer-sign -Wno-newline-eof -DCMAKE_INTDIR=\"Debug\" -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -fasm-blocks -fstrict-aliasing -Wdeprecated-declarations -mmacosx-version-min=10.13 -g -Wno-sign-conversion -Wno-infinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/Debug/include -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/DerivedSources/x86_64 -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/DerivedSources -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -F/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/Debug -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks -MMD -MT dependencies -MF /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64/CheckSymbolExists.d --serialize-diagnostics /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64/CheckSymbolExists.dia -c /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c -o /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64/CheckSymbolExists.o
/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CL_VERSION_2_1'
  return ((int*)(&CL_VERSION_2_1))[argc];
                  ^
1 error generated.

** BUILD FAILED **


The following build commands failed:
	CompileC CMAKE_TRY_COMPILE.build/Debug/cmTC_9a0a0.build/Objects-normal/x86_64/CheckSymbolExists.o CheckSymbolExists.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
(1 failure)

File /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_2_1
  return ((int*)(&CL_VERSION_2_1))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the CL_VERSION_2_0 exist failed with the following output:
Change Dir: /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/xcodebuild" "-project" "CMAKE_TRY_COMPILE.xcodeproj" "build" "-target" "cmTC_7fc4c" "-configuration" "Debug"
2018-01-29 17:43:00.769 xcodebuild[99392:1327623] [MT] PluginLoading: Required plug-in compatibility UUID B395D63E-9166-4CD6-9287-6889D507AD6A for plug-in at path '~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/VVDocumenter-Xcode.xcplugin' not present in DVTPlugInCompatibilityUUIDs
=== BUILD TARGET cmTC_7fc4c OF PROJECT CMAKE_TRY_COMPILE WITH CONFIGURATION Debug ===

Check dependencies

Write auxiliary files
/bin/mkdir -p /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64
write-file /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64/cmTC_7fc4c.LinkFileList

CompileC CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64/CheckSymbolExists.o CheckSymbolExists.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
    cd /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp
    export LANG=en_US.US-ASCII
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x c -arch x86_64 -fmessage-length=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -Wno-trigraphs -fpascal-strings -O0 -Wno-missing-field-initializers -Wno-missing-prototypes -Wno-return-type -Wno-missing-braces -Wparentheses -Wswitch -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wno-unused-variable -Wunused-value -Wno-empty-body -Wno-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wno-constant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wno-shorten-64-to-32 -Wpointer-sign -Wno-newline-eof -DCMAKE_INTDIR=\"Debug\" -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -fasm-blocks -fstrict-aliasing -Wdeprecated-declarations -mmacosx-version-min=10.13 -g -Wno-sign-conversion -Wno-infinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/Debug/include -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/DerivedSources/x86_64 -I/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/DerivedSources -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -F/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/Debug -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks -MMD -MT dependencies -MF /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64/CheckSymbolExists.d --serialize-diagnostics /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64/CheckSymbolExists.dia -c /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c -o /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64/CheckSymbolExists.o
/Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CL_VERSION_2_0'
  return ((int*)(&CL_VERSION_2_0))[argc];
                  ^
1 error generated.

** BUILD FAILED **


The following build commands failed:
	CompileC CMAKE_TRY_COMPILE.build/Debug/cmTC_7fc4c.build/Objects-normal/x86_64/CheckSymbolExists.o CheckSymbolExists.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
(1 failure)

File /Users/zhaoalex/Desktop/OutsourcingProject/BITCOIN/ethminer/Xcode/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include </Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_2_0
  return ((int*)(&CL_VERSION_2_0))[argc];
#else
  (void)argc;
  return 0;
#endif
}

